{"dependencies":[{"name":"./ImageManipulator","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":92,"index":92}}],"key":"AyWwepZviFluMHF1CFj8ITYehdM=","exportNames":["*"]}},{"name":"./ImageManipulator.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":131},"end":{"line":4,"column":64,"index":195}}],"key":"T6y/NYMlBGi0asFDc4kC629pCOk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, \"FlipType\", {\n    enumerable: true,\n    get: function () {\n      return _ImageManipulator2.FlipType;\n    }\n  });\n  Object.defineProperty(exports, \"ImageManipulator\", {\n    enumerable: true,\n    get: function () {\n      return _ImageManipulator.ImageManipulator;\n    }\n  });\n  Object.defineProperty(exports, \"SaveFormat\", {\n    enumerable: true,\n    get: function () {\n      return _ImageManipulator2.SaveFormat;\n    }\n  });\n  Object.defineProperty(exports, \"manipulateAsync\", {\n    enumerable: true,\n    get: function () {\n      return _ImageManipulator.manipulateAsync;\n    }\n  });\n  Object.defineProperty(exports, \"useImageManipulator\", {\n    enumerable: true,\n    get: function () {\n      return _ImageManipulator.useImageManipulator;\n    }\n  });\n  var _ImageManipulator = require(_dependencyMap[0], \"./ImageManipulator\");\n  var _ImageManipulator2 = require(_dependencyMap[1], \"./ImageManipulator.types\");\n});","lineCount":37,"map":[[35,2,1,0],[35,6,1,0,"_ImageManipulator"],[35,23,1,0],[35,26,1,0,"require"],[35,33,1,0],[35,34,1,0,"_dependencyMap"],[35,48,1,0],[36,2,4,0],[36,6,4,0,"_ImageManipulator2"],[36,24,4,0],[36,27,4,0,"require"],[36,34,4,0],[36,35,4,0,"_dependencyMap"],[36,49,4,0],[37,0,4,64],[37,3]],"functionMap":{"names":["<global>"],"mappings":"AAA"}},"type":"js/module"}]}